Variabili

    nome tipo valore

    Dichiarazione
        let numeroCani = 2;

        let

        var

    Modificare valori variabile
        numero cani = 3;


    Tipi variabili

        number
            possono essere positivi negativi e decimali

                 let integerCalculation = 1 + 2;  // donne 3
                 let weirdCalculation = 0.1 + 0.2;  // on attend 0.3, réponse réelle 0.30000000000000004


        string
            devo mettere tra virgolette 'singole' o "doppie"  i caratteri che voglio tratare come string

                let firstName = "Will";
                let lastName = 'Alexander';

            Le string possono essere concatenate con il +

            Operatore di interpolazione per le String ${nome}

                const myName = `Alexander`;
                const salutation = `Bienvenue sur mon site ${myName}!`;
                console.log(salutation);   //retournera “Bienvenue sur mon site Alexander!” 

        boolean
            puo avere solo valore vero(true) o falso (false)

                let userIsSignedIn = true;
                let userIsAdmin = false;

        ATTENZIONE!!!
        Una variabile può essere usata sia come numero che come stringa a nostro piacimento

---------------------------------------------------------------------------------------------------------------------------

    DEFINIZIONE ATTRIBUTI UTILIZZO CLASSI

      DEFINIZIONE DI UNA CLASSE

      class Book {

          //costruttore è lo stampino con cui voglio fare gli oggetti
          constructor(title, author, pages) {
              this.title = title;
              this.author = author;
              this.pages = pages;
          }

      }

      Fatto cio posso usare il costruttore della classe per creare un oggetto

            //notare la parola chiave new
            let myBook = new Book("L'Histoire de Tao", "Will Alexander", 250);
            //Cette ligne crée l'objet suivant :
            {
                title: "L'Histoire de Tao",
                author: "Will Alexander",
                pages: 250
            }


       CREAZIONE DI UN OGGETTO singolo

            let myBook = {
                title: 'The Story of Tau',
                author: 'Will Alexander',
                numberOfPages: 250,
                isAvailable: true
            };


       ACCEDERE AI DATI DEL NOSTRO OGGETTO

            let myBook = {
                title: "L'Histoire de Tao",
                author: "Will Alexander",
                numberOfPages: 250,
                isAvailable: true
            };
            let bookTitle = myBook.title;  // "L'Histoire de Tao"
            let bookPages = myBook.numberOfPages  // 250

       POSSO TRATTARE L'PGGETTO UTILIZZANDO IL NOME DELLA CHIAVE(ELEMENTO) CHE CI INTERESSA

            let myBook = {
                title: "L'Histoire de Tao",
                author: "Will Alexander",
                numberOfPages: 250,
                isAvailable: true
            };
            let bookTitle = myBook["title"];     // "L'Histoire de Tao"
            let bookPages = myBook["numberOfPages"];     // 250

            PERCHE FARE QUESTO?
                questa srittura ci permette di utilizzare una variabiel contenente il nome
                della classe che ci interessa tra le parentesi quadre []

                let propertyToAccess = "title";
                let bookTitle = myBook[propertyToAccess]; // "L'Histoire de Tao"

------------------------------------------------------------------------------------------------------------
    UTILIZZO ARRAY
        Lista ordinata con un indice


        CREAZIONE TABELLA VUOTA
            let guests = [];

        CREAZIONE TABELLA PIENA
            let guests = ["Sarah Kate", "Audrey Simon", "Will Alexander"];

        ACCESSO AGLI ELEMENTI DELLA TABELLA
            let firstGuest = guests[0]; // "Sarah Kate"
            let thirdGuest = guests[2]; // "Will Alexander"
            let undefinedGuest = guests[12] // undefined


        CONTARE ELEMENTI TABELLA (.length)
            let guests = ["Will Alexander", "Sarah Kate", "Audrey Simon"];
            let howManyGuests = guests.length; // 3

        AGGIUNTA ELEMENTI
            guests.push("Tao Perkington"); // ajoute "Tao Perkington" à la fin de notre tableau guests

            guests.unshift("Tao Perkington"); //per mettere l'elemento all'inizio

        ELIMINAZIONE ELEMENTI
            guests.pop(); // elimina l'ultimo elemento della tabella


-------------------------------------------------------------------------------------------------------------
ESECUZIONE JS IN UNA PAGINA HTML
    sufficente inserire il tag con il percorso dove trovo il codice o direttamente il codice all'interno del tag
        <script src="./script.js"> </script>



    Lista operatori aritmetici
    Si possono usare tutti gli operatori aritmetici

    OPERATORI DI ASSEGNAZIONE ARITMETICI
    			     SIMBOLO	    ESEMPIO
     Addizione			+          4 + 27 = 31
     Sottrazione	                –         76 – 23 = 53
     Moltiplicazione                *           4 * 7 = 28
     Divisione intera               /          10 / 3 = 3  (3 è il n di volte
    							divisibili senza resto)
     Divisione con modulo           %          11 / 6 = 5    (5 è il resto
    							    della divisione)
    			       += x	//aggiungi il valore di x
    			       -= x	//sottrai il valore di x

    -----------------------------------------------------------------------------
    OPERATORI DI CONFRONTO
    Simbolo		Significato		Utilizzo
      ==		  uguale a		 a == b
      !=		  diverso da		 a != b
      <		  minore 		 a < b
      >		  maggiore		 a > b
      <=		  minore o uguale	 a <= b
      >=		  maggiore o uguale	 a >= b

    -----------------------------------------------------------------------------
    OPERATORI BITWISE
    Questi operatori lavorano sui singoli bit dei tipi INTERI.

    << Spostamento di bit a sinistra di un numero specificato di posizioni di bit
    >> Spostamento di bit a destra di un numero specificato di posizioni di bit
    |  OR esclusivo sul singolo bit
    ^  OR esclusivo sul singolo bit
    &  AND esclusivo lul bit
    ~ NOT esclusivo sul bit

    -----------------------------------------------------------------------------
    OPERATORI LOGICI
    Simbolo		Significato		Utilizzo
    &&		AND logico		a && b
    ||		OR logico		a || b
    !b		NOT logico		a

